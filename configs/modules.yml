#Module for get system info + meta
- name: system
  descr: System information
#Module for get link info
- name: link_info
  arguments:
    - {name: port, pattern: '^.*$', required: no}
  descr: Port information

#Module for get counters
- name: counters
  arguments:
    - {name: port, pattern: '^[0-9]{1,3}$', required: no}
  descr: Counters on port

#Module for get errors
- name: errors
  arguments:
    - {name: port, pattern: '^[0-9]{1,3}$', required: no}
  descr: Errors on port

#Module for get rmon data
- name: rmon
  arguments:
    - {name: port, pattern: '^[0-9]{1,3}$', required: no}
  descr: RMON statistic

#Module for get FDB
- name: fdb
  arguments:
    - {name: port, pattern: '.*', required: no}
    - {name: mac, pattern: '.*', required: no}
    - {name: vlan_id, pattern: '^[0-9]{1,4}$', required: no}
  descr: MAC forwarding database

#Get vlan info from device
- name: vlans
  arguments:
    - {name: vlan_id, pattern: '^[0-9]{1,4}$', required: no}
  descr: Vlan information

#Get vlan info from device by ports
- name: vlans_by_port
  arguments:
    - {name: port, pattern: '^[0-9]{1,3}$', required: no}
  depends:
    - vlans
  descr: Vlan information over port

- name: pvid
  arguments:
    - {name: port, pattern: '^[0-9]{1,3}$', required: no}
  descr: PVID table
#Cable diagnostic module
- name: cable_diag
  arguments:
    - {name: port, pattern: '^[0-9]{1,3}$', required: no}
  descr: Cable diagnostic
#Action clear counters
- name: clear_counters
  descr: Clear counters
#Action save configuration
- name: save_config
  descr: Save configuration
#Action reboot
- name: reboot
  descr: Reboot device
#Action reboot
- name: onu_reboot
  descr: Reboot ONU
  arguments:
    - {name: onu, pattern: '.*', required: yes}

#Action port state control
- name: ctrl_port_state
  arguments:
    - {name: port, pattern: '^[0-9]{1,4}$', required: yes}
    - {name: state, pattern: '^(disable|enable)$', required: yes, values: [disable, enable]}
  descr: Port state configuration
#Action port state speed
- name: ctrl_port_speed
  arguments:
    - {name: port, pattern: '^[0-9]{1,4}$', required: yes}
    - {name: speed, pattern: '^auto|(10|100|1000|10000)-(Half|Full)$', required: yes, values: [auto, 10-Full, 100-Full, 1000-Full]}
  descr: Port speed configuration

#Action port state desciption
- name: ctrl_port_descr
  arguments:
    - {name: port, pattern: '^[0-9]{1,4}$', required: yes}
    - {name: description, pattern: '^[0-9a-zA-Z_]{1,}$', required: yes}
  descr: Port description configuration

#Action for vlan state control
- name: ctrl_vlan_state
  arguments:
    - {name: id, pattern: '^[0-9]{1,4}$', required: no}
    - {name: name, pattern: '^[0-9a-zA-Z_]{1,16}$', required: no}
    - {name: action, pattern: '^(delete|create)$', required: yes, values: [delete, create]}
  descr: Vlan configuration on device

#Action for vlan state control
- name: ctrl_vlan_port
  arguments:
    - {name: id, pattern: '^[0-9]{1,4}$', required: yes}
    - {name: port, pattern: '^[0-9]{1,4}$', required: yes}
    - {name: type, pattern: '^(tagged|untagged)$', required: no, values: [tagged, untagged]}
    - {name: action, pattern: '^(delete|add)$', required: yes, values: [delete, add]}
  descr: Vlan configuration on port

#Action Get arp info with filters
- name: arp_info
  arguments:
    - {name: ip, pattern: '^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$', required: no}
    - {name: vlan_id, pattern: '^[0-9]{1,4}$', required: no}
    - {name: vlan_name, pattern: '^.*$', required: no}
    - {name: mac, pattern: '^[a-fA-F0-9:]{17}|[a-fA-F0-9]{12}$', required: no}
    - {name: status, pattern: '^(disabled|invalid|OK)$', required: no, values: [disabled, invalid, OK]}
  depends:
    - interface_vlan_info
  descr: ARP information (L3 devices)

#Action Get arp info with filters
- name: lease_info
  arguments:
    - {name: ip, pattern: '^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$', required: no}
    - {name: vlan_id, pattern: '^[0-9]{1,4}$', required: no}
    - {name: vlan_name, pattern: '^.*$', required: no}
    - {name: mac, pattern: '^[a-fA-F0-9:]{17}|[a-fA-F0-9]{12}$', required: no}
    - {name: dhcp_server, pattern: '^.*$', required: no}
  depends:
    - dhcp_server_info
  descr: Lease information
#Action Get arp info with filters
- name: ctrl_static_lease
  arguments:
    - {name: action, pattern: '^(add|remove)$', required: yes, values: [add, remove]}
    - {name: ip, pattern: '^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$', required: no}
    - {name: vlan_id, pattern: '^[0-9]{1,4}$', required: no}
    - {name: vlan_name, pattern: '^.*$', required: no}
    - {name: mac, pattern: '^[a-fA-F0-9:]{17}|[a-fA-F0-9]{12}$', required: no}
    - {name: dhcp_server, pattern: '^.*$', required: no}
    - {name: comment, pattern: '^.*$', required: no}
  depends:
    - dhcp_server_info
    - lease_info
  descr: Control static leases


#Action Get arp info with filters
- name: dhcp_server_info
  arguments:
    - {name: name, pattern: '^.*$', required: no}
    - {name: vlan_id, pattern: '^[0-9]{1,4}$', required: no}
    - {name: vlan_name, pattern: '^.*$', required: no}
  depends:
    - interface_vlan_info
  descr: DHCP-server information (RouterOS devices)

#Action Get arp info with filters
- name: interface_vlan_info
  arguments:
    - {name: name, pattern: '^[0-9a-zA-Z_]{1,16}$', required: no}
    - {name: vlan_id, pattern: '^[0-9]{1,4}$', required: no}
  descr: Interface information (vlans on L3 devices)
#Action Get arp info with filters
- name: arp_ping
  arguments:
    - {name: ip, pattern: '^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$', required: yes}
    - {name: vlan_id, pattern: '^[0-9]{1,4}$', required: no}
    - {name: vlan_name, pattern: '^.*$', required: no}
    - {name: count, pattern: '^[0-9]{1,}$', required: no}
  depends:
    - interface_vlan_info
  descr: ARP ping

- name: ctrl_static_arp
  arguments:
    - {name: action, pattern: '^(add|remove)$', required: yes, values: [add, remove]}
    - {name: ip, pattern: '^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$', required: no}
    - {name: vlan_id, pattern: '^[0-9]{1,4}$', required: no}
    - {name: vlan_name, pattern: '^.*$', required: no}
    - {name: mac, pattern: '^[a-fA-F0-9:]{17}|[a-fA-F0-9]{12}$', required: no }
    - {name: comment, pattern: '.*', required: no }
  descr: Adding and removing static ARP (L3 Devices)
  depends:
    - interface_vlan_info
    - arp_info

- name: address_list_info
  arguments:
    - {name: name, pattern: '^[0-9a-zA-Z_\-]{1,}$', required: no}
    - {name: address, pattern: '^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$|^(?:[0-9]{1,3}\.){3}[0-9]{1,3}\/[0-9]{1,2}$', required: no}
  descr: Info by addresses list

- name: address_list_ctrl
  arguments:
    - {name: _id, pattern: '.*', required: no}
    - {name: action, pattern: '^(remove|add|disable|enable)$', required: yes, values: [add,remove,disable,enable]}
    - {name: name, pattern: '^[0-9a-zA-Z_\-]{1,}$', required: no}
    - {name: address, pattern: '^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$|^(?:[0-9]{1,3}\.){3}[0-9]{1,3}\/[0-9]{1,2}$', required: no}
    - {name: comment, pattern: '.*', required: no}
    - {name: timeout, pattern: '.*', required: no}
  descr: Working with address list

- name: simple_queue_info
  descr: Info of simple queue
  arguments:
    - {name: _id, pattern: .*, required: no}
    - {name: name, pattern: .*, required: no}
    - {name: target, pattern: '^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$|^(?:[0-9]{1,3}\.){3}[0-9]{1,3}\/[0-9]{1,2}$', required: no}
    - {name: type, pattern: '.*', required: no}
    - {name: parent, pattern: '.*', required: no}
- name: simple_queue_ctrl
  arguments:
    - {name: _id, pattern: '.*', required: no}
    - {name: action, pattern: '^(remove|add|disable|enable)$', required: yes, values: [add,remove,disable,enable]}
    - {name: name, pattern: .*, required: no}
    - {name: target, pattern: '^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$|^(?:[0-9]{1,3}\.){3}[0-9]{1,3}\/[0-9]{1,2}$', required: no}
    - {name: type, pattern: '.*', required: no}
    - {name: limit-at, pattern: '.*', required: no}
    - {name: max-limit, pattern: '.*', required: no}
    - {name: parent, pattern: '.*', required: no}
    - {name: comment, pattern: '.*', required: no}
  descr: Info of simple queue



#Action Get arp info with filters
- name: slot_info
  arguments:
    - {name: slot_num, pattern: '^[0-9]{1,4}$', required: no}
  descr: Slot information (ZTE devices)

#Action Get arp info with filters
- name: sfp_info
  arguments:
    - {name: port, pattern: '.*', required: no}
  descr: SFP into

#Action Get ont data
- name: zte_onu_info
  arguments:
    - {name: onu, pattern: '^(gpon|epon)-(onu)_([0-9])\/([0-9]{1,3})\/([0-9]{1,3}):[0-9]{1,3}$', required: yes}
  descr: ONU info (on PON)
#Action Get ont data
- name: zte_onu_pon_info
  arguments:
    - {name: interface, pattern: '^(gpon|epon)-(olt)_([0-9])\/([0-9]{1,3})\/([0-9]{1,3})$', required: yes}
  descr: Info about all ONUs on interface

#Action Get ont data
- name: zte_onu_ether_iface_info
  arguments:
    - {name: onu, pattern: '^(gpon|epon)-(onu)_([0-9])\/([0-9]{1,3})\/([0-9]{1,3}):[0-9]{1,3}$', required: yes}
  descr: ONU info (on PON)

#Action Get ont data
- name: zte_onu_signal_strength
  arguments:
    - {name: onu, pattern: '^(gpon|epon)-(onu)_([0-9])\/([0-9]{1,3})\/([0-9]{1,3}):[0-9]{1,3}$', required: yes}
  descr: ONU signal strength info (on PON)

#Action Get ont data
- name: zte_fdb
  arguments:
    - {name: onu, pattern: '^(gpon|epon)-(onu)_([0-9])\/([0-9]{1,3})\/([0-9]{1,3}):[0-9]{1,3}$', required: no}
    - {name: interface, pattern: '^(gpon|epon)-(olt)_([0-9])\/([0-9]{1,3})\/([0-9]{1,3})$', required: no}
  descr: ONU signal strength info (on PON)


#Get ONU state by interface
- name: zte_onu_state_by_interface
  arguments:
    - {name: interface, pattern: '^(gpon|epon)-(olt)_([0-9])\/([0-9]{1,3})\/([0-9]{1,3})$', required: yes}
    - {name: parse, pattern: '.*', required: no, values: []}
  descr: List ONU state by interface

- name: zte_onu_dereg
  descr: Allow send configuration command to interface
  arguments:
    - {name: onu, pattern: '^(gpon|epon)-(onu)_([0-9])\/([0-9]{1,3})\/([0-9]{1,3}):[0-9]{1,3}$', required: yes}


#Show Unregistered ONU
- name: zte_unregistered_onu
  arguments:
    - {name: type, pattern: '^(all|gpon|epon)$', required: no, values: [all,gpon,epon]}
  descr: List unregistered ONU

#Get ONU state by interface
- name: zte_gpon_onu_profile_list
  descr: List ONU profiles for GPON
  arguments:
      - {name: type, pattern: '^(remote|line)$', required: yes, values: [ remote,line ] }

- name: zte_onu_registration_gpon
  descr: ONU registration for GPON
  arguments:
    - {name: interface, pattern: '^(gpon|epon)-(olt)_([0-9])\/([0-9]{1,3})\/([0-9]{1,3})$', required: yes}
    - {name: type, pattern: '.*', required: yes}
    - {name: serial, pattern: '.*', required: yes}
    - {name: profile_line, pattern: '.*', required: yes}
    - {name: profile_remote, pattern: '.*', required: yes}
    - {name: number, pattern: '[0-9]{1,3}', required: yes}

- name: zte_onu_registration_epon
  descr: ONU registration for GPON
  arguments:
    - {name: interface, pattern: '^(gpon|epon)-(olt)_([0-9])\/([0-9]{1,3})\/([0-9]{1,3})$', required: yes}
    - {name: type, pattern: '.*', required: yes}
    - {name: mac, pattern: '.*', required: yes}
    - {name: number, pattern: '[0-9]{1,3}', required: yes}

- name: zte_onu_interface_console
  descr: Allow send configuration command to interface
  arguments:
    - {name: onu, pattern: '^(gpon|epon)-(olt)_([0-9])\/([0-9]{1,3})\/([0-9]{1,3}):[0-9]{1,3}$', required: yes}
    - {name: command, pattern: '.*', required: yes}

- name: zte_card_list
  descr: Listing of cards on OLT


- name: pon_interfaces_list
  descr: Information of PON interfaces

- name: pon_registered_onts
  descr: Count registered onts on pon

- name: pon_onts_status
  arguments:
    - { name: meta, pattern: 'yes|no', required: no }
  descr: Returned onts statuses

- name: pon_onts_mac_addr
  descr: Returned ONTs MAC addresses
  arguments:
    - {name: interface, pattern: '^(pon|xge|ge)([0-9])\/([0-9])\/([0-9]){1,}\:?([0-9]{1,3})?$', required: no}
    - {name: meta, pattern: 'yes|no', required: no}

- name: pon_onts_optical
  descr: Returned ONTs MAC addresses
  arguments:
    - {name: interface, pattern: '^(pon|xge|ge)([0-9])\/([0-9])\/([0-9]){1,}\:?([0-9]{1,3})?$', required: no}
    - {name: meta, pattern: 'yes|no', required: no}

- name: pon_onts_status_detailed
  descr: Returned ONTs MAC addresses
  arguments:
    - {name: interface, pattern: '^(pon|xge|ge)([0-9])\/([0-9])\/([0-9]){1,}\:?([0-9]{1,3})?$', required: no}
    - {name: meta, pattern: 'yes|no', required: no}

- name: pon_onts_general_info
  descr: Returned ONTs MAC addresses
  arguments:
    - {name: interface, pattern: '^(pon|xge|ge)([0-9])\/([0-9])\/([0-9]){1,}\:?([0-9]{1,3})?$', required: no}
    - {name: meta, pattern: 'yes|no', required: no}

- name: pon_fdb
  descr: Returned FDB table on ONTs
  arguments:
    - {name: interface, pattern: '^(pon|xge|ge)([0-9])\/([0-9])\/([0-9]){1,}\:?([0-9]{1,3})?$', required: no}
    - {name: meta, pattern: 'yes|no', required: no}
    - {name: vlan_id, pattern: '[0-9]{1,4}', required: no}
    - {name: mac, pattern: '^[a-fA-F0-9:]{17}|[a-fA-F0-9]{12}$', required: no}

- name: pon_uni_info
  descr: Returned FDB table on ONTs
  arguments:
    - {name: interface, pattern: '^(pon|xge|ge)([0-9])\/([0-9])\/([0-9]){1,}\:?([0-9]{1,3})?$', required: no}

