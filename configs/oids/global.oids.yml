#SYSTEM OIDS
  - {name: sys.Descr, oid: .1.3.6.1.2.1.1.1, access: read }
  - {name: sys.ObjId, oid: .1.3.6.1.2.1.1.2, access: read }
  - {name: sys.IfacesCount, oid: .1.3.6.1.2.1.2.1, access: read }
  - {name: sys.Uptime, oid: .1.3.6.1.2.1.1.3, access: read }
  - {name: sys.Contact, oid: .1.3.6.1.2.1.1.4, access: write, type: string }
  - {name: sys.Name, oid: .1.3.6.1.2.1.1.5, access: write, type: string }
  - {name: sys.Location, oid: .1.3.6.1.2.1.1.6, access: write, type: string }
  - {name: sys.macAddr, oid: .1.3.6.1.2.1.17.1.1, access: read, type: string }

# Not all device supported
#  - {name: sys.Revision, oid: .1.3.6.1.2.1.47.1.1.1.1.8.1, type: string }
#  - {name: sys.Firmware, oid: .1.3.6.1.2.1.47.1.1.1.1.9.1, type: string }
#if mib (.iso.org.dod.internet.mgmt.mib-2.interfaces + .iso.org.dod.internet.mgmt.mib-2.ifMIB.ifMIBObjects.ifXTable.ifXEntry)
  - {name: if.Index, oid: .1.3.6.1.2.1.2.2.1.1, access: read }
  - {name: if.Descr, oid: .1.3.6.1.2.1.2.2.1.2, access: read }
  - {name: if.Type, oid: .1.3.6.1.2.1.2.2.1.3, access: read, values: {1: UNKNOWN, 53: Virtual, 24: Loopback, 6: FE, 117: GE, 135: VLAN, 161: LACP, 136: VLAN, 137: VLAN, 207: PON, 208: PON,  209: BRIDGE, 250: GPON, 266: ONU, 142: IP, 300: EPON}}
  - {name: if.StatsDuplexStatus, oid: .1.3.6.1.2.1.10.7.2.1.19, access: read , values: {1: Down, 2: Half, 3: Full}}
  #Включен/отключен интерфейс
  # 1-UP/2-DOWN/3-TESTING
  - {name: if.AdminStatus, oid: .1.3.6.1.2.1.2.2.1.7, access: write, type: integer, values: {1: Enabled, 2: Disabled, 3: TESTING} }
  #Текущее состояние интерфейса
  # 1-UP/2-DOWN/6-NOT PRESENT
  - {name: if.OperStatus, oid: .1.3.6.1.2.1.2.2.1.8, access: read, values: {1: Up, 2: Down, 6: NotPresent, 7: LLDown} }
  #The value of sysUpTime at the time the interface entered its current operational state.  If the current state was entered prior to the last re-initialization of the local network management subsystem, then this object contains a zero value.
  - {name: if.LastChange, oid: .1.3.6.1.2.1.2.2.1.9, access: read }
  - {name: if.PhysAddr, oid: .1.3.6.1.2.1.2.2.1.6, access: read }
  - {name: if.InErrors, oid: .1.3.6.1.2.1.2.2.1.14, access: read }
  - {name: if.OutErrors, oid: .1.3.6.1.2.1.2.2.1.20, access: read }
  - {name: if.InDiscards, oid: .1.3.6.1.2.1.2.2.1.13, access: read }
  - {name: if.OutDiscards, oid: .1.3.6.1.2.1.2.2.1.19, access: read }
  - {name: if.HCInOctets, oid: .1.3.6.1.2.1.31.1.1.1.6, access: read }
  - {name: if.HCOutOctets, oid: .1.3.6.1.2.1.31.1.1.1.10, access: read }
  - {name: if.HCOutMulticastPkts, oid: .1.3.6.1.2.1.31.1.1.1.12, access: read }
  - {name: if.HCInMulticastPkts, oid: .1.3.6.1.2.1.31.1.1.1.8, access: read }
  - {name: if.HCOutBroadcastPkts, oid: .1.3.6.1.2.1.31.1.1.1.13, access: read }
  - {name: if.HCInBroadcastPkts, oid: .1.3.6.1.2.1.31.1.1.1.9, access: read }

  - {name: if.HighSpeed, oid: .1.3.6.1.2.1.31.1.1.1.15, access: read, values: {0: "Down", 1000: 1G, 1250: 1.25G, 2000: 2G, 3000: 3G, 4000: 3G, 2488: 2.5G, 2500: 2.5G, 10000: 10G, 20000: 20G, 30000: 30G, 40000: 40G } }
  - {name: if.ConnectorPresent, oid: .1.3.6.1.2.1.31.1.1.1.17, access: read, values: { 1: 'YES', 2: 'NO' } }
  - {name: if.Name, oid: .1.3.6.1.2.1.31.1.1.1.1, access: read }
  - {name: if.Alias, oid: .1.3.6.1.2.1.31.1.1.1.18, access: write }
  - {name: if.stackStatus, oid: 1.3.6.1.2.1.31.1.2.1.3 } #Возвращает список родительских элементов для LACP
  - {name: ent.physicalType, oid: .1.3.6.1.2.1.47.1.1.1.1.2}
  - {name: ent.physicalName, oid: .1.3.6.1.2.1.47.1.1.1.1.7}

#rmon mib
  - {name: rmon.EtherStatsCRCAlignErrors, oid: .1.3.6.1.2.1.16.1.1.1.8, access: read }
  - {name: rmon.EtherStatsUndersizePkts, oid: .1.3.6.1.2.1.16.1.1.1.9, access: read }
  - {name: rmon.EtherStatsOversizePkts, oid: .1.3.6.1.2.1.16.1.1.1.10, access: read }
  - {name: rmon.EtherStatsFragments, oid: .1.3.6.1.2.1.16.1.1.1.11, access: read }
  - {name: rmon.EtherStatsJabber, oid: .1.3.6.1.2.1.16.1.1.1.12, access: read }
  - {name: rmon.EtherStatsCollisions, oid: .1.3.6.1.2.1.16.1.1.1.13, access: read }
  - {name: rmon.EtherStatsDropEvents, oid: .1.3.6.1.2.1.16.1.1.1.3, access: read }
#qBridgeMIB - dot1qVlan
  - {name: dot1q.PortIfIndex, oid: .1.3.6.1.2.1.17.1.4.1.2, access: read}
  - {name: dot1q.VlanStaticName, oid: .1.3.6.1.2.1.17.7.1.4.3.1.1, access: read}
  - {name: dot1q.VlanStaticEgressPorts, oid: .1.3.6.1.2.1.17.7.1.4.3.1.2, access: read} #RETURNED HEX-STRING, must wrapped to binary. num of byte = num port; 1 = on port
  - {name: dot1q.VlanStaticForbiddenEgressPorts, oid: .1.3.6.1.2.1.17.7.1.4.3.1.3, access: read} #RETURNED HEX-STRING, must wrapped to binary. num of byte = num port; 1 = on port
  - {name: dot1q.VlanStaticUntaggedPorts, oid: .1.3.6.1.2.1.17.7.1.4.3.1.4, access: read } #RETURNED HEX-STRING, must wrapped to binary. num of byte = num port; 1 = on port
  - {name: dot1q.VlanStaticRowStatus, oid: .1.3.6.1.2.1.17.7.1.4.3.1.5, access: read } #RETURNED HEX-STRING, must wrapped to binary. num of byte = num port; 1 = on port

  - {name: dot1q.VlanCurrentEgressPorts, oid: .1.3.6.1.2.1.17.7.1.4.2.1.4, access: read} #RETURNED HEX-STRING, must wrapped to binary. num of byte = num port; 1 = on port
  - {name: dot1q.VlanCurrentUntaggedPorts, oid: .1.3.6.1.2.1.17.7.1.4.2.1.5, access: read } #RETURNED HEX-STRING, must wrapped to binary. num of byte = num port; 1 = on port


#qBridgeMIB - dot1qBase
  - {name: dot1q.Pvid, oid: .1.3.6.1.2.1.17.7.1.4.5.1.1, access: read}
  - {name: dot1q.NumVlans, oid: .1.3.6.1.2.1.17.7.1.1.4, access: read}
  - {name: dot1q.MaxVlanId, oid: .1.3.6.1.2.1.17.7.1.1.1, access: read}
  - {name: dot1q.MaxSupportedVlans, oid: .1.3.6.1.2.1.17.7.1.1.3, access: read}
#qBridgeMIB - dot1qTp
# .1.3.6.1.2.1.17.7.1.2.2.1.2.[VLAN ID].[MAC-OCTET].[MAC-OCTET].[MAC-OCTET].[MAC-OCTET].[MAC-OCTET].[MAC-OCTET] = [PORT]
  - {name: dot1q.FdbPort, oid: .1.3.6.1.2.1.17.7.1.2.2.1.2, access: read}
# .1.3.6.1.2.1.17.7.1.2.2.1.3.[VLAN ID].[MAC-OCTET].[MAC-OCTET].[MAC-OCTET].[MAC-OCTET].[MAC-OCTET].[MAC-OCTET] = [STATUS]
  - {name: dot1q.FdbStatus, oid: .1.3.6.1.2.1.17.7.1.2.2.1.3, access: read, values: {1: OTHER, 2: INVALID, 3: LEARNED, 4: SELF, 5: MGMT}}
